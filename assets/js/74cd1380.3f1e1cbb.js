(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{141:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return l}));var r=t(3),a=t(8),i=(t(0),t(218)),o={title:"Actions"},s={unversionedId:"main-components/actions",id:"main-components/actions",isDocsHomePage:!1,title:"Actions",description:"- Definition & Principles",source:"@site/docs/main-components/actions.md",sourceDirName:"main-components",slug:"/main-components/actions",permalink:"/docs/next/main-components/actions",editUrl:"https://github.com/apiato/documentation/tree/master/docs/main-components/actions.md",version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1618677928,formattedLastUpdatedAt:"4/17/2021",frontMatter:{title:"Actions"},sidebar:"docs",previous:{title:"Requests",permalink:"/docs/next/main-components/requests"},next:{title:"Tasks",permalink:"/docs/next/main-components/tasks"}},c=[{value:"Definition &amp; Principles",id:"definition-principles",children:[]},{value:"Rules",id:"rules",children:[]},{value:"Folder Structure",id:"folder-structure",children:[]},{value:"Code Sample",id:"code-sample",children:[]}],p={toc:c};function l(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#definition-principles"},"Definition & Principles")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#rules"},"Rules")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#code-sample"},"Code Sample"))),Object(i.b)("h3",{id:"definition-principles"},"Definition & Principles"),Object(i.b)("p",null,"Read the section in the  ",Object(i.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#Actions"},Object(i.b)("strong",{parentName:"a"},"Porto SAP Documentation (#Actions)")),"."),Object(i.b)("h3",{id:"rules"},"Rules"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"All Actions MUST extend ",Object(i.b)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Actions\\Action"),".")),Object(i.b)("h3",{id:"folder-structure"},"Folder Structure"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"}," - app\n    - Containers\n        - {container-name}\n            - Actions\n                - CreateUserAction.php\n                - DeleteUserAction.php\n                - ...\n")),Object(i.b)("h3",{id:"code-sample"},"Code Sample"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Delete User Action:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"namespace App\\Containers\\AppSection\\User\\Actions;\n\nuse Apiato\\Core\\Foundation\\Facades\\Apiato;\nuse App\\Containers\\AppSection\\User\\Models\\User;\nuse App\\Ship\\Parents\\Actions\\Action;\n\nclass CreateAdminAction extends Action\n{\n\n    /**\n     * @param string $email\n     * @param string $password\n     * @param string $name\n     * @param bool   $isClient\n     *\n     * @return  \\App\\Containers\\AppSection\\User\\Models\\User\n     */\n    public function run(string $email, string $password, string $name, bool $isClient = false): User\n    {\n        $admin = Apiato::call('User@CreateUserByCredentialsTask', [\n            $isClient,\n            $email,\n            $password,\n            $name\n        ]);\n\n        Apiato::call('Authorization@AssignUserToRoleTask', [$admin, ['admin']]);\n\n        return $admin;\n    }\n}\n")),Object(i.b)("p",null,"Injecting each Task in constructor and then using it below through its property is really boring, and the more Tasks you use the worse it gets. So instead you can use the function ",Object(i.b)("inlineCode",{parentName:"p"},"call")," to call whichever Task you want and then pass any parameters to it."),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Same Example using the ",Object(i.b)("inlineCode",{parentName:"strong"},"call")," function:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"namespace App\\Containers\\AppSection\\User\\Actions;\n\nuse App\\Containers\\AppSection\\User\\Tasks\\DeleteUserTask;\nuse App\\Ship\\Parents\\Actions\\Action;\n\nclass DeleteUserAction extends Action\n{\n\n    public function run($userId)\n    {\n        return Apiato::call(DeleteUserTask::class, [$userId]); // <<<<<\n    }\n\n}\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Example: Calling multiple Tasks:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"namespace App\\Containers\\Email\\Actions;\n\nuse App\\Containers\\Xxx\\Tasks\\Sample111Task;\nuse App\\Containers\\Xxx\\Tasks\\Sample222Task;\nuse App\\Ship\\Parents\\Actions\\Action;\n\nclass DemoAction extends Action\n{\n\n    public function run($xxx, $yyy, $zzz)\n    {\n\n        $foo = Apiato::call(Sample111Task::class, [$xxx, $yyy]);\n\n        $bar = Apiato::call(Sample222Task::class, [$zzz]);\n\n        // ...\n\n    }\n\n}\n\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},"Action usage from a Controller:")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"}," <?php\n    //...\n\n    public function deleteUser(DeleteUserRequest $request)\n    {\n        $user = Apiato::call(DeleteUserAction::class, [$request->xxx, $request->yyy]);\n\n        return $this->deleted($user);\n    }\n\n    //...\n")),Object(i.b)("p",null,"The same Action MAY be called by multiple Controllers (Web, Api, Cli)."))}l.isMDXComponent=!0},218:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),l=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},u=function(e){var n=l(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),b=r,d=u["".concat(o,".").concat(b)]||u[b]||m[b]||i;return t?a.a.createElement(d,s(s({ref:n},p),{},{components:t})):a.a.createElement(d,s({ref:n},p))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=b;var s={};for(var c in n)hasOwnProperty.call(n,c)&&(s[c]=n[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);