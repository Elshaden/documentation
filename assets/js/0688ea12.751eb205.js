(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{281:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return b}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=a.a.createContext({}),u=function(e){var n=a.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return a.a.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(t),m=r,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return t?a.a.createElement(b,i(i({ref:n},c),{},{components:t})):a.a.createElement(b,i({ref:n},c))}));function b(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,s=new Array(o);s[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var c=2;c<o;c++)s[c]=t[c];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},70:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return s})),t.d(n,"metadata",(function(){return i})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return u}));var r=t(3),a=t(8),o=(t(0),t(281)),s={title:"Validation"},i={unversionedId:"core-features/validation",id:"version-10.x/core-features/validation",isDocsHomePage:!1,title:"Validation",description:"Apiato uses the powerful Laravel validation system.",source:"@site/versioned_docs/version-10.x/core-features/validation.md",sourceDirName:"core-features",slug:"/core-features/validation",permalink:"/docs/core-features/validation",editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-10.x/core-features/validation.md",version:"10.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1619394104,formattedLastUpdatedAt:"4/25/2021",frontMatter:{title:"Validation"},sidebar:"version-10.x/docs",previous:{title:"API Versioning",permalink:"/docs/core-features/api-versioning"},next:{title:"ETag",permalink:"/docs/core-features/etag"}},l=[{value:"Responses",id:"responses",children:[]}],c={toc:l};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Apiato uses the powerful ",Object(o.b)("a",{parentName:"p",href:"https://laravel.com/docs/validation"},"Laravel validation")," system."),Object(o.b)("p",null,"In Apiato, validation must be defined in ",Object(o.b)("a",{parentName:"p",href:"../main-components/requests"},"Request")," component, since every request might have different rules."),Object(o.b)("p",null,"Validation rules are automatically applied, once injecting the Request in the Controller."),Object(o.b)("p",null,"Requests help validating User data, accessibility, ownership and more."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Example Request with Validation rules:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-php"},"namespace App\\Containers\\AppSection\\User\\UI\\API\\Requests;\n\nuse App\\Ship\\Parents\\Requests\\Request;\n\nclass RegisterUserRequest extends Request\n{\n    /**\n     * @return  array\n     */\n    public function rules()\n    {\n        return [\n            'email'    => 'required|email|max:200|unique:users,email',\n            'password' => 'required|min:20|max:300',\n            'name'     => 'required|min:2|max:400',\n        ];\n    }\n\n}\n")),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Usage from Controller Example:")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-php"},"    public function registerUser(RegisterUserRequest $request)\n    {\n        $user = app(RegisterUserAction::class)->run($request);\n        return $this->transform($user, UserTransformer::class);\n    }\n")),Object(o.b)("h2",{id:"responses"},"Responses"),Object(o.b)("p",null,"Validation Error response format:"),Object(o.b)("p",null,"Single Field:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "The given data was invalid.",\n  "errors": {\n    "email": [\n      "The email has already been taken."\n    ]\n  }\n}\n')),Object(o.b)("p",null,"Multiple Fields:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "The given data was invalid.",\n  "errors": {\n    "email": [\n      "The email has already been taken."\n    ],\n    "password": [\n      "The password field is required."\n    ]\n  }\n}\n')),Object(o.b)("p",null,"More details about requests in the ",Object(o.b)("a",{parentName:"p",href:"../main-components/requests"},"Requests")," Page."))}u.isMDXComponent=!0}}]);