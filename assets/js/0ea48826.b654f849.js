(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{218:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),b=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=b(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=b(n),d=r,m=s["".concat(i,".").concat(d)]||s[d]||u[d]||o;return n?a.a.createElement(m,c(c({ref:t},p),{},{components:n})):a.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},72:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return b}));var r=n(3),a=n(8),o=(n(0),n(218)),i={title:"Architecture"},c={unversionedId:"getting-started/software-architectural-patterns",id:"getting-started/software-architectural-patterns",isDocsHomePage:!1,title:"Architecture",description:"* Introduction",source:"@site/docs/getting-started/software-architectural-patterns.md",sourceDirName:"getting-started",slug:"/getting-started/software-architectural-patterns",permalink:"/docs/next/getting-started/software-architectural-patterns",editUrl:"https://github.com/apiato/documentation/tree/master/docs/getting-started/software-architectural-patterns.md",version:"current",lastUpdatedBy:"Mahmoud Zalt",lastUpdatedAt:1619042088,formattedLastUpdatedAt:"4/21/2021",frontMatter:{title:"Architecture"},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/next/getting-started/installation"},next:{title:"Samples",permalink:"/docs/next/getting-started/samples"}},l=[{value:"Porto SAP",id:"porto",children:[{value:"Introduction",id:"introduction",children:[]},{value:"About Porto",id:"about-porto",children:[]},{value:"The Containers Layer",id:"porto-container-layer",children:[]},{value:"The Ship Layer",id:"porto-ship-layer",children:[]}]}],p={toc:l};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"#introduction"},"Introduction")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"#porto-container-layer"},"The Containers Layer"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"#porto-new-container"},"Create a new Container"),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"#porto-new-container-code-generator"},"Option 1) Using the Code Generator")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"#porto-new-container-manually"},"Option 2) Manually"))))),Object(o.b)("ul",{parentName:"li"},Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"#containter-conventions"},"Container Conventions")))),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",{parentName:"li",href:"#porto-ship-layer"},"The Ship Layer"))),Object(o.b)("h2",{id:"porto"},"Porto SAP"),Object(o.b)("h3",{id:"introduction"},"Introduction"),Object(o.b)("p",null,Object(o.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto"},"Porto")," is the recommended architecture for building apps on Apiato."),Object(o.b)("p",null,"Apiato also supports the popular MVC architecture (with a little modifications). The Apiato features are written using Porto, but can be used by any architecture."),Object(o.b)("h3",{id:"about-porto"},"About Porto"),Object(o.b)("p",null,"Porto is an architecture that consists of 2 layers the ",Object(o.b)("strong",{parentName:"p"},"Containers")," layer and ",Object(o.b)("strong",{parentName:"p"},"Ship")," layer."),Object(o.b)("p",null,"The ",Object(o.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#2-containers-layer"},Object(o.b)("strong",{parentName:"a"},"Container"))," layer holds your application business logic code.\nWhile ",Object(o.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#1-ship-layer"},Object(o.b)("strong",{parentName:"a"},"Ship"))," layer holds the infrastructure code (your shared code between all Containers)."),Object(o.b)("p",null,"Containers are grouped into ",Object(o.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#containers-sections"},Object(o.b)("strong",{parentName:"a"},"Sections"))," to easily move them around and reuse them ",Object(o.b)("em",{parentName:"p"},"(A section is equivalent to a bounded context from the Domain-driven design)"),"."),Object(o.b)("p",null,"By default, Apiato comes with two Sections: "),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"App Section"),": The default section, containing all your containers. You can create additional sections whenever needed."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Vendor Section"),": for downloaded reusable containers. Similar to the vendor directory.    ")),Object(o.b)("p",null,"The Apiato features themselves are developed using Porto, so their code lives inside Containers."),Object(o.b)("hr",null),Object(o.b)("p",null,"Spending 30 minutes, reading the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto"},"Porto Document")," before getting started, is a great\ninvestment of time."),Object(o.b)("hr",null),Object(o.b)("h3",{id:"porto-container-layer"},"The Containers Layer"),Object(o.b)("p",null,"Read about the Containers layer ",Object(o.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#Containers-Layer"},"here"),"."),Object(o.b)("h4",{id:"porto-new-container"},"Create a new Container"),Object(o.b)("h5",{id:"porto-new-container-code-generator"},"Option 1) Using the Code Generator:"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"php artisan apiato:generate:container")),Object(o.b)("p",null,"Refer to the ",Object(o.b)("a",{parentName:"p",href:"../core-features/code-generator"},"code generator")," page for more details."),Object(o.b)("h5",{id:"porto-new-container-manually"},"Option 2) manually:"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Create a folder in the Containers folder."),Object(o.b)("li",{parentName:"ol"},"Start creating components and adding them in it.")),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"(The Ship engine will autoload and register everything automatically for you)"),"."),Object(o.b)("p",null,"For the auto-loading to work flawlessly you MUST adhere to the component's naming conventions and directories. So you\nneed to refer to the ",Object(o.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto"},"documentation page")," of the component when creating it."),Object(o.b)("h4",{id:"containter-conventions"},"Container Conventions"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"Containers name SHOULD start with Capital. Use CamelCase to rename Containers."),Object(o.b)("li",{parentName:"ul"},'Namespace should be the same as the container name, (if container name is "Printer" the namespace should be\n',Object(o.b)("inlineCode",{parentName:"li"},"App\\Containers\\SectionName\\Printer"),")."),Object(o.b)("li",{parentName:"ul"},"Container MAY be named anything, however a good practice is to name it to its most important Model name.\n",Object(o.b)("em",{parentName:"li"},"Example: If the User Story is (User can create a Store and Store can have Items) then we you could have 3\nContainers (User, Store and Item)."))),Object(o.b)("h3",{id:"porto-ship-layer"},"The Ship Layer"),Object(o.b)("p",null,"Read about the Ship layer ",Object(o.b)("strong",{parentName:"p"},Object(o.b)("a",{parentName:"strong",href:"https://github.com/Mahmoudz/Porto#Port-Layer"},"here"))))}b.isMDXComponent=!0}}]);