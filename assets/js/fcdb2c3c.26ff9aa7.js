"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1698],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,h=u["".concat(l,".").concat(m)]||u[m]||c[m]||i;return n?r.createElement(h,o(o({ref:t},d),{},{components:n})):r.createElement(h,o({ref:t},d))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2735:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={title:"Seeders"},l=void 0,p={unversionedId:"optional-components/seeders",id:"version-9.x/optional-components/seeders",isDocsHomePage:!1,title:"Seeders",description:"* Definition",source:"@site/versioned_docs/version-9.x/optional-components/seeders.md",sourceDirName:"optional-components",slug:"/optional-components/seeders",permalink:"/docs/9.x/optional-components/seeders",editUrl:"https://github.com/apiato/documentation/tree/master/versioned_docs/version-9.x/optional-components/seeders.md",tags:[],version:"9.x",lastUpdatedBy:"Moslem Deris",lastUpdatedAt:1618096631,formattedLastUpdatedAt:"4/10/2021",frontMatter:{title:"Seeders"},sidebar:"version-9.x/docs",previous:{title:"Migrations",permalink:"/docs/9.x/optional-components/migrations"},next:{title:"Factories",permalink:"/docs/9.x/optional-components/factories"}},d=[{value:"Definition",id:"definition",children:[]},{value:"Principles",id:"principles",children:[]},{value:"Rules",id:"rules",children:[]},{value:"Folder Structure",id:"folder-structure",children:[]},{value:"Code Samples",id:"code-samples",children:[]},{value:"Run the Seeders",id:"run-the-seeders",children:[]},{value:"Apiato testing seeder command",id:"apiato-testing-seeder-command",children:[]}],c={toc:d};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#definition"},"Definition")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#principles"},"Principles")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#rules"},"Rules")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#code-samples"},"Code Samples")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#run-the-seeders"},"Run the Seeders")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"#apiato-testing-seeder-command"},"Testing seeder command"))),(0,i.kt)("h3",{id:"definition"},"Definition"),(0,i.kt)("p",null,"Seeders (are a short name for Database Seeders)."),(0,i.kt)("p",null,"Seeders are classes made to seed the database with real data, this data usually should exist in the Application after the installation (Example: the default Users Roles and Permissions or the list of Countries)."),(0,i.kt)("h3",{id:"principles"},"Principles"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Seeders SHOULD be created in the Containers. (If the container is using a package that publishes a Seeder class, this class should be manually placed in the Container that make use of it. Do not reply on the package to place it on its right location).")),(0,i.kt)("h3",{id:"rules"},"Rules"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Seeders should be in the right directory inside the container to be loaded.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"To avoid any conflict between containers seeders classes, you SHOULD always prepend the Seeders of each container with the container name. (Example: ",(0,i.kt)("inlineCode",{parentName:"p"},"UserPermissionsSeeder"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"ItemPermissionsSeeder"),"). ",(0,i.kt)("em",{parentName:"p"},"If 2 seeders classes have the same name but live in different containers, one of them will not be loaded."))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"If you wish to order the seeding of the classes, you can just append ",(0,i.kt)("inlineCode",{parentName:"p"},"_1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"_2")," to your classes."))),(0,i.kt)("h3",{id:"folder-structure"},"Folder Structure"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"}," - App\n    - Containers\n        - {container-name}\n             - Data\n                - Seeders\n                    - ContainerNameRolesSeeder_1.php\n                    - ContainerNamePermissionsSeeder_2.php\n                    - ...\n")),(0,i.kt)("h3",{id:"code-samples"},"Code Samples"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Roles ",(0,i.kt)("inlineCode",{parentName:"strong"},"Seeder"),":")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-php"},"<?php\n\nnamespace App\\Containers\\Order\\Data\\Seeders;\n\nuse App\\Ship\\Parents\\Seeders\\Seeder;\nuse Apiato\\Core\\Foundation\\Facades\\Apiato;\n\nclass OrderPermissionsSeeder_1 extends Seeder\n{\n\n    public function run()\n    {\n        Apiato::call('Authorization@CreatePermissionTask', ['approve-reject-orders']);\n        Apiato::call('Authorization@CreatePermissionTask', ['find-orders']);\n        Apiato::call('Authorization@CreatePermissionTask', ['list-orders']);\n        Apiato::call('Authorization@CreatePermissionTask', ['update-orders']);\n        Apiato::call('Authorization@CreatePermissionTask', ['delete-orders']);\n\n        // ...\n\n    }\n}\n\n")),(0,i.kt)("p",null,"Note: Same ",(0,i.kt)("inlineCode",{parentName:"p"},"Seeder")," class is allowed to contain seeding for multiple ",(0,i.kt)("inlineCode",{parentName:"p"},"Models"),"."),(0,i.kt)("h3",{id:"run-the-seeders"},"Run the Seeders"),(0,i.kt)("p",null,"After registering the ",(0,i.kt)("inlineCode",{parentName:"p"},"Seeders")," you can run this command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"php artisan db:seed\n")),(0,i.kt)("p",null,"To run specific Seeder class you can specify its class in the parameter as follows:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},'php artisan db:seed --class="your\\single\\seeder\\goes-here"\n')),(0,i.kt)("p",null,"Migrate & seed at the same time"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"php artisan migrate --seed\n")),(0,i.kt)("p",null,"For more information about the Database Seeders read ",(0,i.kt)("a",{parentName:"p",href:"https://laravel.com/docs/master/seeding"},"this"),"."),(0,i.kt)("h2",{id:"apiato-testing-seeder-command"},"Apiato testing seeder command"),(0,i.kt)("p",null,"It's useful sometimes to create a big set of testing data. apiato facilitates this task:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Open ",(0,i.kt)("inlineCode",{parentName:"li"},"app/Ship/Seeders/SeedTestingData.php")," and write your testing data here."),(0,i.kt)("li",{parentName:"ol"},"Run this command any time you want this data available (example at staging servers):")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"php artisan apiato:seed-test\n")))}u.isMDXComponent=!0}}]);