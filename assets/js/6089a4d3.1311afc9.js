(window.webpackJsonp=window.webpackJsonp||[]).push([[52],{122:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return s}));var r=t(3),a=t(8),i=(t(0),t(218)),o={title:"Exceptions"},c={unversionedId:"main-components/exceptions",id:"main-components/exceptions",isDocsHomePage:!1,title:"Exceptions",description:"* Definition & Principles",source:"@site/docs/main-components/exceptions.md",sourceDirName:"main-components",slug:"/main-components/exceptions",permalink:"/docs/next/main-components/exceptions",editUrl:"https://github.com/apiato/documentation/tree/master/docs/main-components/exceptions.md",version:"current",lastUpdatedBy:"Mohammad Alavi",lastUpdatedAt:1618685236,formattedLastUpdatedAt:"4/17/2021",frontMatter:{title:"Exceptions"},sidebar:"docs",previous:{title:"Transformers",permalink:"/docs/next/main-components/transformers"},next:{title:"Sub Actions",permalink:"/docs/next/main-components/subactions"}},p=[{value:"Definition &amp; Principles",id:"definition-principles",children:[]},{value:"Rules",id:"rules",children:[]},{value:"Folder Structure",id:"folder-structure",children:[]},{value:"Code Samples",id:"code-samples",children:[]}],l={toc:p};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#definition-principles"},"Definition & Principles")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#principles"},"Principles")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#rules"},"Rules")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#folder-structure"},"Folder Structure")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#code-samples"},"Code Samples"))),Object(i.b)("h3",{id:"definition-principles"},"Definition & Principles"),Object(i.b)("p",null,"Read ",Object(i.b)("a",{parentName:"p",href:"https://github.com/Mahmoudz/Porto#Exceptions"},Object(i.b)("strong",{parentName:"a"},"Porto SAP Documentation (#Exceptions)")),"."),Object(i.b)("h3",{id:"rules"},"Rules"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"All Exceptions MUST extend ",Object(i.b)("inlineCode",{parentName:"li"},"App\\Ship\\Parents\\Exceptions\\Exception"),"."),Object(i.b)("li",{parentName:"ul"},"Shared (general) Exceptions between all Containers SHOULD be created in the ",Object(i.b)("strong",{parentName:"li"},"Exceptions Ship")," folder (",Object(i.b)("inlineCode",{parentName:"li"},"app/Ship/Exceptions/*"),")."),Object(i.b)("li",{parentName:"ul"},"Every Exception SHOULD have two properties ",Object(i.b)("inlineCode",{parentName:"li"},"code")," and ",Object(i.b)("inlineCode",{parentName:"li"},"message"),". You can override those values while throwing the error.")),Object(i.b)("h3",{id:"folder-structure"},"Folder Structure"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre"}," - App\n    - Containers\n        - {section-name}\n            - {container-name}\n                - Exceptions\n                    - AccountFailedException.php\n                    - ...\n\n    - Ship\n        - Exceptions\n            - CreateResourceFailedException.php\n            - NotFoundException.php\n            - ...\n")),Object(i.b)("h3",{id:"code-samples"},"Code Samples"),Object(i.b)("h4",{id:"demo-exception"},"Demo Exception"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"class DemoException extends Exception\n{\n    public $code = Response::HTTP_CONFLICT;\n    public $message = 'This is a demo exception.';\n}\n")),Object(i.b)("h4",{id:"usage-from-anywhere"},"Usage from anywhere"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"throw new AccountFailedException();\n")),Object(i.b)("h4",{id:"usage-with-errors"},"Usage with errors"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"throw (new AccountFailedException())->withErrors(['email' => 'Email already in use']);\nthrow (new AccountFailedException())->withErrors(['email' => ['Email already in use', 'Another message']]);\n")),Object(i.b)("h4",{id:"usage-with-errors-and-localization"},"Usage with errors and localization"),Object(i.b)("p",null,"For localization, you can use the ",Object(i.b)("a",{parentName:"p",href:"../additional-features/apiato-containers/localization"},"Localization Container")),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"// translation strings are automatically translated if the translations are found.\nthrow (new AccountFailedException())->withErrors(['email' => 'appSection@user::exceptions.email-taken']);\n")),Object(i.b)("p",null,"Response:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "The exception error message.",\n  "errors": {\n    "email": [\n      "The email has already been taken."\n    ]\n  }\n}\n')),Object(i.b)("h4",{id:"usage-with-log-for-debugging"},"Usage with Log for Debugging"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"throw (new AccountFailedException())->debug($e); // debug() accepts string or \\Exception instance\n")),Object(i.b)("h4",{id:"usage-and-overriding-the-default"},"Usage and overriding the default"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-php"},"throw new AccountFailedException('I am the message to be displayed to the user');\n")))}s.isMDXComponent=!0},218:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=a.a.createContext({}),s=function(e){var n=a.a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=s(e.components);return a.a.createElement(l.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(t),d=r,m=u["".concat(o,".").concat(d)]||u[d]||b[d]||i;return t?a.a.createElement(m,c(c({ref:n},l),{},{components:t})):a.a.createElement(m,c({ref:n},l))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=d;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);